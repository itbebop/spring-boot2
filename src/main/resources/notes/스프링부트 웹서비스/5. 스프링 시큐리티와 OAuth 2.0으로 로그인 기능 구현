ㅇ로그인 시 구현해야하는 기능
    1) 로그인 시 보안
    2) 회원가입 시 이메일 / 전화번호 인증
    3) 비번 찾기
    4) 비번 변경
    5) 회원정보 변경

ㅇ 스프링 부트 1.5 vs. 스프링 부트 2.0
    - spring-security-oauth2-autoconfigure 라이브러리를 사용할 경우 스프링 부트 1.5에서 쓰던 설정을 2에서도 쓸 수 있음
    - 이 책에서는 스프링 부트 2 방식인 Spring Security Qauth2 Client 라이브러리를 사용함
        이유는
        > 스프링 팀에서 기존 1.5에서 사용하던 spring-security-oauth 프로젝트는 유지 상태(maintenance mode)로 결정했으며
        더는 신규 기능은 추가하지 않고 버그 수정 정도의 기능만 추가될 예정, 신규 기능은 새 oauth2 라이브러리에서만 지원하겠다고 선엄함
        > 스프링 부트용 라이브러리(starter) 출시
        > 기존에 사용하던 방식은 확장 포인트가 적절하게 오픈되어 있지 않아 직접 상속하거나 오버라이딩 해야 하고
        신규 라이브러리의 경우 확장 포인트를 고려해서 설계된 상태임
    cf) 스프링 부트 2 방식의 자료를 찾을 경우
     1) spring-security-oauth2-autoconfigure 라이브러리를 썼는지 확인
     2) application.properties 혹은 application.yml 정보가 차이가 있는지 확인
      > 1.5 방식에서는 url 주소를 모두 명시해야하지만, 2.0 방식에서는 client 인증 정보만 입력하면 됨
      >> 1.5에서 직접 입력하던 값들은 2.0에서는 모두 enum으로 대체됨
      >>> CommonOAuth2Provider라는 enum이 새롭게 추가되어 구글, 깃허브, 페이스북, 옥타의 기본 설정값은 여기서 제공함

ㅁ https://console.cloud.google.com/ 에서 구글 서비스 등록
 - 새프로젝트 > API 및 서비스 > 사용자 인증 정보 > OAuth 클라이언트 ID > 동의 화면 구성
 - 승인된 리디렉션 URI
  > http://localhost:8080/login/oauth2/code/google
  > 서비스에서 파라미터로 인증 정보를 주었을 때 인증이 성공하면 구글에서 리다이렉트할 URL
  > 스프링 부트2 버전의 시큐리티에서는 기본적으로 {도메인}/login/oauth2/code/{소셜서비스코드}로 리다이렉트 URL을 지원하고 있음
  > 시큐리티에서 이미 구현해 놓았으므로 사용자가 별도로 리다이렉트 URL을 지원하는 Controller를 만들 필요가 없음
  > 현재는 개발 단계이므로 http://localhost:8080/login/oauth2/code/google로만 등록함
  > AWS 서버에 배포하게 되면 localhost 외에 추가로 주소를 추가해야하며, 이건 이후에 진행할 것

